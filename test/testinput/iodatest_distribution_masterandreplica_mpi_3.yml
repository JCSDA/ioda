---
window begin: 2021-01-15T00:00:00Z
window end:   2021-01-16T00:00:00Z

# Expected indices are based on 3 PE's during an MPI run. If you change
# the number of PE in the ecbuild_add_test in the ../CMakeLists.txt file,
# then the expected indices below need to change accordingly.
#
# The test is coded so that the keyword "rank" + (MPI Rank Number) is used from this
# file to get the expected result. If you are MPI rank 0, then you read the keywords
# under "rank0:" from this file; MPI rank 1, keywords from "rank1:"; etc.

observations:

- obs space:
    name: RoundRobin, with extension, each process reads a separate file
    obsdatain:
      read obs from separate file: true
      obsfile: Data/testinput_tier_1/obsspace_grouping_distributed.nc4
      obsgrouping:
        group variables: [group_by_int]
        # Task 0:
        # group_by_int@MetaData = 1, 1, 1, 3, 3, 1, 1, 1, 1 ;
        # Task 1:
        # group_by_int@MetaData = ;  // all obs outside window
        # Task 0:
        # group_by_int@MetaData = 2 ;
    simulated variables: [temperature]
    extension:
      allocate companion records with length: 3
  specs:
    gnlocs: 19  # 10 original obs + 9 averaged obs (3 levels * 3 records)
    allgatherv: [  0, 3, 6, 9, 12, 15, 18, 21, 24,  # original obs from rank 0
                                                    # no original obs from rank 1
                   2,                               # original obs from rank 2
                  25, 26, 27, 34, 35, 36,           # averaged obs from rank 0
                                                    # no averaged obs from rank 1
                  31, 32, 33 ]                      # averaged obs from rank 2
    rank0:
      nlocs: 15  # 9 original + 6 averaged
      nrecs: 4
      nPatchLocs: 15
      index: [ 0, 3, 6, 9, 12, 15, 18, 21, 24, 25, 26, 27, 34, 35, 36 ]
      recnums: [ 0, 0, 0, 3, 3, 0, 0, 0, 0, 4, 4, 4, 7, 7, 7 ]
      patchIndex: [ 0, 3, 6, 9, 12, 15, 18, 21, 24, 25, 26, 27, 34, 35, 36 ]
    rank1:
      nlocs: 0
      nrecs: 0
      nPatchLocs: 0
      index: [ ]
      recnums: [ ]
      patchIndex: [ ]
    rank2:
      nlocs: 4  # 1 original + 3 averaged
      nrecs: 2
      nPatchLocs: 4
      index: [ 2, 31, 32, 33 ]
      recnums: [ 2, 6, 6, 6 ]
      patchIndex: [ 2, 31, 32, 33 ]
