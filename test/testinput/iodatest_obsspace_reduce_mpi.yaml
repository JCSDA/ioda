---
time window:
  begin: "2018-01-01T00:00:00Z"
  end: "2022-01-01T00:00:00Z"

observations:

####################### 1D variables #######################

- obs space:
    name: "Reduce equal, 1D variables"
    simulated variables: ['airTemperature']
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_1D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 1, 0, 0, 1, 1, 0, 1, 0, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 9
        index: [ 2, 8, 10, 14 ]
        recnum: [ 2, 8, 10, 14 ]
        recidx:
          rec2: [ 0 ]
          rec8: [ 1 ]
          rec10: [ 2 ]
          rec14: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 1, 0, 0, 0, 0, 1, 1, 1, 1 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 9
        index: [ 3, 13, 15, 17, 19 ]
        recnum: [ 3, 13, 15, 17, 19 ]
        recidx:
          rec3: [ 0 ]
          rec13: [ 1 ]
          rec15: [ 2 ]
          rec17: [ 3 ]
          rec19: [ 4 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 1, 0, 0, 0, 1, 0 ]

        # expected results
        nlocs: 2
        nrecs: 2
        gnlocs: 9
        index: [ 3, 15 ]
        recnum: [ 3, 15 ]
        recidx:
          rec3: [ 0 ]
          rec15: [ 1 ]

      rank1:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 0, 0, 1, 1, 0, 1 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 9
        index: [ 10, 13, 19 ]
        recnum: [ 10, 13, 19 ]
        recidx:
          rec10: [ 0 ]
          rec13: [ 1 ]
          rec19: [ 2 ]

      rank2:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 1, 0, 1, 0, 1, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 9
        index: [ 2, 8, 14, 17 ]
        recnum: [ 2, 8, 14, 17 ]
        recidx:
          rec2: [ 0 ]
          rec8: [ 1 ]
          rec14: [ 2 ]
          rec17: [ 3 ]

- obs space:
    name: "Reduce not equal, 1D variables"
    simulated variables: ['airTemperature']
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_1D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 9
        nrecs: 9
        gnlocs: 18
        index: [ 0, 2, 4, 6, 8, 10, 12, 16, 18 ]
        recnum: [ 0, 2, 4, 6, 8, 10, 12, 16, 18 ]
        recidx:
          rec0: [ 0 ]
          rec2: [ 1 ]
          rec4: [ 2 ]
          rec6: [ 3 ]
          rec8: [ 4 ]
          rec10: [ 5 ]
          rec12: [ 6 ]
          rec16: [ 7 ]
          rec18: [ 8 ]

      rank1:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 9
        nrecs: 9
        gnlocs: 18
        index: [ 1, 3, 7, 9, 11, 13, 15, 17, 19 ]
        recnum: [ 1, 3, 7, 9, 11, 13, 15, 17, 19 ]
        recidx:
          rec1: [ 0 ]
          rec3: [ 1 ]
          rec7: [ 2 ]
          rec9: [ 3 ]
          rec11: [ 4 ]
          rec13: [ 5 ]
          rec15: [ 6 ]
          rec17: [ 7 ]
          rec19: [ 8 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 7
        nrecs: 7
        gnlocs: 18
        index: [ 0, 3, 6, 9, 12, 15, 18 ]
        recnum: [ 0, 3, 6, 9, 12, 15, 18 ]
        recidx:
          rec0: [ 0 ]
          rec3: [ 1 ]
          rec6: [ 2 ]
          rec9: [ 3 ]
          rec12: [ 4 ]
          rec15: [ 5 ]
          rec18: [ 6 ]

      rank1:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 7
        nrecs: 7
        gnlocs: 18
        index: [ 1, 4, 7, 10, 13, 16, 19 ]
        recnum: [ 1, 4, 7, 10, 13, 16, 19 ]
        recidx:
          rec1: [ 0 ]
          rec4: [ 1 ]
          rec7: [ 2 ]
          rec10: [ 3 ]
          rec13: [ 4 ]
          rec16: [ 5 ]
          rec19: [ 6 ]

      rank2:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 18
        index: [ 2, 8, 11, 17 ]
        recnum: [ 2, 8, 11, 17 ]
        recidx:
          rec2: [ 0 ]
          rec8: [ 1 ]
          rec11: [ 2 ]
          rec17: [ 3 ]

- obs space:
    name: "Reduce, greater than, 1D variables"
    simulated variables: ['airTemperature']
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_1D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 8
        index: [ 6, 8, 10, 12 ]
        recnum: [ 6, 8, 10, 12 ]
        recidx:
          rec6: [ 0 ]
          rec8: [ 1 ]
          rec10: [ 2 ]
          rec12: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 8
        index: [ 7, 9, 11, 13 ]
        recnum: [ 7, 9, 11, 13 ]
        recidx:
          rec7: [ 0 ]
          rec9: [ 1 ]
          rec11: [ 2 ]
          rec13: [ 3 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 8
        index: [ 6, 9, 12 ]
        recnum: [ 6, 9, 12 ]
        recidx:
          rec6: [ 0 ]
          rec9: [ 1 ]
          rec12: [ 2 ]

      rank1:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 8
        index: [ 7, 10, 13 ]
        recnum: [ 7, 10, 13 ]
        recidx:
          rec7: [ 0 ]
          rec10: [ 1 ]
          rec13: [ 2 ]

      rank2:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 2
        nrecs: 2
        gnlocs: 8
        index: [ 8, 11 ]
        recnum: [ 8, 11 ]
        recidx:
          rec8: [ 0 ]
          rec11: [ 1 ]

- obs space:
    name: "Reduce, less than, 1D variables"
    simulated variables: ['airTemperature']
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_1D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 0, 2, 4, 16, 18 ]
        recnum: [ 0, 2, 4, 16, 18 ]
        recidx:
          rec0: [ 0 ]
          rec2: [ 1 ]
          rec4: [ 2 ]
          rec16: [ 3 ]
          rec18: [ 4 ]

      rank1:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 1, 3, 15, 17, 19 ]
        recnum: [ 1, 3, 15, 17, 19 ]
        recidx:
          rec1: [ 0 ]
          rec3: [ 1 ]
          rec15: [ 2 ]
          rec17: [ 3 ]
          rec19: [ 4 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 10
        index: [ 0, 3, 15, 18 ]
        recnum: [ 0, 3, 15, 18 ]
        recidx:
          rec0: [ 0 ]
          rec3: [ 1 ]
          rec15: [ 2 ]
          rec18: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 10
        index: [ 1, 4, 16, 19 ]
        recnum: [ 1, 4, 16, 19 ]
        recidx:
          rec1: [ 0 ]
          rec4: [ 1 ]
          rec16: [ 2 ]
          rec19: [ 3 ]

      rank2:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 2
        nrecs: 2
        gnlocs: 10
        index: [ 2, 17 ]
        recnum: [ 2, 17 ]
        recidx:
          rec2: [ 0 ]
          rec17: [ 1 ]

- obs space:
    name: "Reduce, greater than or equal, 1D variables"
    simulated variables: ['airTemperature']
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_1D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 6, 8, 10, 12, 14 ]
        recnum: [ 6, 8, 10, 12, 14 ]
        recidx:
          rec6: [ 0 ]
          rec8: [ 1 ]
          rec10: [ 2 ]
          rec12: [ 3 ]
          rec14: [ 4 ]

      rank1:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 5, 7, 9, 11, 13 ]
        recnum: [ 5, 7, 9, 11, 13 ]
        recidx:
          rec5: [ 0 ]
          rec7: [ 1 ]
          rec9: [ 2 ]
          rec11: [ 3 ]
          rec13: [ 4 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 10
        index: [ 6, 9, 12 ]
        recnum: [ 6, 9, 12 ]
        recidx:
          rec6: [ 0 ]
          rec9: [ 1 ]
          rec12: [ 2 ]

      rank1:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 10
        index: [ 7, 10, 13 ]
        recnum: [ 7, 10, 13 ]
        recidx:
          rec7: [ 0 ]
          rec10: [ 1 ]
          rec13: [ 2 ]

      rank2:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 10
        index: [ 5, 8, 11, 14 ]
        recnum: [ 5, 8, 11, 14 ]
        recidx:
          rec5: [ 0 ]
          rec8: [ 1 ]
          rec11: [ 2 ]
          rec14: [ 3 ]

- obs space:
    name: "Reduce, less than or equal, 1D variables"
    simulated variables: ['airTemperature']
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_1D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 6
        nrecs: 6
        gnlocs: 12
        index: [ 0, 2, 4, 14, 16, 18 ]
        recnum: [ 0, 2, 4, 14, 16, 18 ]
        recidx:
          rec0: [ 0 ]
          rec2: [ 1 ]
          rec4: [ 2 ]
          rec14: [ 3 ]
          rec16: [ 4 ]
          rec18: [ 5 ]

      rank1:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 6
        nrecs: 6
        gnlocs: 12
        index: [ 1, 3, 5, 15, 17, 19 ]
        recnum: [ 1, 3, 5, 15, 17, 19 ]
        recidx:
          rec1: [ 0 ]
          rec3: [ 1 ]
          rec5: [ 2 ]
          rec15: [ 3 ]
          rec17: [ 4 ]
          rec19: [ 5 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 12
        index: [ 0, 3, 15, 18 ]
        recnum: [ 0, 3, 15, 18 ]
        recidx:
          rec0: [ 0 ]
          rec3: [ 1 ]
          rec15: [ 2 ]
          rec18: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 12
        index: [ 1, 4, 16, 19 ]
        recnum: [ 1, 4, 16, 19 ]
        recidx:
          rec1: [ 0 ]
          rec4: [ 1 ]
          rec16: [ 2 ]
          rec19: [ 3 ]

      rank2:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 12
        index: [ 2, 5, 14, 17 ]
        recnum: [ 2, 5, 14, 17 ]
        recidx:
          rec2: [ 0 ]
          rec5: [ 1 ]
          rec14: [ 2 ]
          rec17: [ 3 ]

####################### 2D variables #######################
- obs space:
    name: "Reduce, equal 2D variables"
    simulated variables: ['brightnessTemperature']
    channels: 1-5
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_2D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 1, 0, 0, 1, 1, 0, 1, 0, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 9
        index: [ 2, 8, 10, 14 ]
        recnum: [ 2, 8, 10, 14 ]
        recidx:
          rec2: [ 0 ]
          rec8: [ 1 ]
          rec10: [ 2 ]
          rec14: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 1, 0, 0, 0, 0, 1, 1, 1, 1 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 9
        index: [ 3, 13, 15, 17, 19 ]
        recnum: [ 3, 13, 15, 17, 19 ]
        recidx:
          rec3: [ 0 ]
          rec13: [ 1 ]
          rec15: [ 2 ]
          rec17: [ 3 ]
          rec19: [ 4 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 1, 0, 0, 0, 1, 0 ]

        # expected results
        nlocs: 2
        nrecs: 2
        gnlocs: 9
        index: [ 3, 15 ]
        recnum: [ 3, 15 ]
        recidx:
          rec3: [ 0 ]
          rec15: [ 1 ]

      rank1:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 0, 0, 0, 1, 1, 0, 1 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 9
        index: [ 10, 13, 19 ]
        recnum: [ 10, 13, 19 ]
        recidx:
          rec10: [ 0 ]
          rec13: [ 1 ]
          rec19: [ 2 ]

      rank2:
        # arguments
        reduce:
          action: equal
          threshold: 1
          check vector: [ 1, 0, 1, 0, 1, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 9
        index: [ 2, 8, 14, 17 ]
        recnum: [ 2, 8, 14, 17 ]
        recidx:
          rec2: [ 0 ]
          rec8: [ 1 ]
          rec14: [ 2 ]
          rec17: [ 3 ]

- obs space:
    name: "Reduce, not equal 2D variables"
    simulated variables: ['brightnessTemperature']
    channels: 1-5
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_2D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 9
        nrecs: 9
        gnlocs: 18
        index: [ 0, 2, 4, 6, 8, 10, 12, 16, 18 ]
        recnum: [ 0, 2, 4, 6, 8, 10, 12, 16, 18 ]
        recidx:
          rec0: [ 0 ]
          rec2: [ 1 ]
          rec4: [ 2 ]
          rec6: [ 3 ]
          rec8: [ 4 ]
          rec10: [ 5 ]
          rec12: [ 6 ]
          rec16: [ 7 ]
          rec18: [ 8 ]

      rank1:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 9
        nrecs: 9
        gnlocs: 18
        index: [ 1, 3, 7, 9, 11, 13, 15, 17, 19 ]
        recnum: [ 1, 3, 7, 9, 11, 13, 15, 17, 19 ]
        recidx:
          rec1: [ 0 ]
          rec3: [ 1 ]
          rec7: [ 2 ]
          rec9: [ 3 ]
          rec11: [ 4 ]
          rec13: [ 5 ]
          rec15: [ 6 ]
          rec17: [ 7 ]
          rec19: [ 8 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 7
        nrecs: 7
        gnlocs: 18
        index: [ 0, 3, 6, 9, 12, 15, 18 ]
        recnum: [ 0, 3, 6, 9, 12, 15, 18 ]
        recidx:
          rec0: [ 0 ]
          rec3: [ 1 ]
          rec6: [ 2 ]
          rec9: [ 3 ]
          rec12: [ 4 ]
          rec15: [ 5 ]
          rec18: [ 6 ]

      rank1:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 7
        nrecs: 7
        gnlocs: 18
        index: [ 1, 4, 7, 10, 13, 16, 19 ]
        recnum: [ 1, 4, 7, 10, 13, 16, 19 ]
        recidx:
          rec1: [ 0 ]
          rec4: [ 1 ]
          rec7: [ 2 ]
          rec10: [ 3 ]
          rec13: [ 4 ]
          rec16: [ 5 ]
          rec19: [ 6 ]

      rank2:
        # arguments
        reduce:
          action: "not equal"
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 18
        index: [ 2, 8, 11, 17 ]
        recnum: [ 2, 8, 11, 17 ]
        recidx:
          rec2: [ 0 ]
          rec8: [ 1 ]
          rec11: [ 2 ]
          rec17: [ 3 ]

- obs space:
    name: "Reduce, greater than, 2D variables"
    simulated variables: ['brightnessTemperature']
    channels: 1-5
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_2D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 8
        index: [ 6, 8, 10, 12 ]
        recnum: [ 6, 8, 10, 12 ]
        recidx:
          rec6: [ 0 ]
          rec8: [ 1 ]
          rec10: [ 2 ]
          rec12: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 8
        index: [ 7, 9, 11, 13 ]
        recnum: [ 7, 9, 11, 13 ]
        recidx:
          rec7: [ 0 ]
          rec9: [ 1 ]
          rec11: [ 2 ]
          rec13: [ 3 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 8
        index: [ 6, 9, 12 ]
        recnum: [ 6, 9, 12 ]
        recidx:
          rec6: [ 0 ]
          rec9: [ 1 ]
          rec12: [ 2 ]

      rank1:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 8
        index: [ 7, 10, 13 ]
        recnum: [ 7, 10, 13 ]
        recidx:
          rec7: [ 0 ]
          rec10: [ 1 ]
          rec13: [ 2 ]

      rank2:
        # arguments
        reduce:
          action: greater than
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 2
        nrecs: 2
        gnlocs: 8
        index: [ 8, 11 ]
        recnum: [ 8, 11 ]
        recidx:
          rec8: [ 0 ]
          rec11: [ 1 ]

- obs space:
    name: "Reduce, less than, 2D variables"
    simulated variables: ['brightnessTemperature']
    channels: 1-5
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_2D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 0, 2, 4, 16, 18 ]
        recnum: [ 0, 2, 4, 16, 18 ]
        recidx:
          rec0: [ 0 ]
          rec2: [ 1 ]
          rec4: [ 2 ]
          rec16: [ 3 ]
          rec18: [ 4 ]

      rank1:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 1, 3, 15, 17, 19 ]
        recnum: [ 1, 3, 15, 17, 19 ]
        recidx:
          rec1: [ 0 ]
          rec3: [ 1 ]
          rec15: [ 2 ]
          rec17: [ 3 ]
          rec19: [ 4 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 10
        index: [ 0, 3, 15, 18 ]
        recnum: [ 0, 3, 15, 18 ]
        recidx:
          rec0: [ 0 ]
          rec3: [ 1 ]
          rec15: [ 2 ]
          rec18: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 10
        index: [ 1, 4, 16, 19 ]
        recnum: [ 1, 4, 16, 19 ]
        recidx:
          rec1: [ 0 ]
          rec4: [ 1 ]
          rec16: [ 2 ]
          rec19: [ 3 ]

      rank2:
        # arguments
        reduce:
          action: less than
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 2
        nrecs: 2
        gnlocs: 10
        index: [ 2, 17 ]
        recnum: [ 2, 17 ]
        recidx:
          rec2: [ 0 ]
          rec17: [ 1 ]

- obs space:
    name: "Reduce, greater than or equal, 2D variables"
    simulated variables: ['brightnessTemperature']
    channels: 1-5
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_2D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 6, 8, 10, 12, 14 ]
        recnum: [ 6, 8, 10, 12, 14 ]
        recidx:
          rec6: [ 0 ]
          rec8: [ 1 ]
          rec10: [ 2 ]
          rec12: [ 3 ]
          rec14: [ 4 ]

      rank1:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 5
        nrecs: 5
        gnlocs: 10
        index: [ 5, 7, 9, 11, 13 ]
        recnum: [ 5, 7, 9, 11, 13 ]
        recidx:
          rec5: [ 0 ]
          rec7: [ 1 ]
          rec9: [ 2 ]
          rec11: [ 3 ]
          rec13: [ 4 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 10
        index: [ 6, 9, 12 ]
        recnum: [ 6, 9, 12 ]
        recidx:
          rec6: [ 0 ]
          rec9: [ 1 ]
          rec12: [ 2 ]

      rank1:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 3
        nrecs: 3
        gnlocs: 10
        index: [ 7, 10, 13 ]
        recnum: [ 7, 10, 13 ]
        recidx:
          rec7: [ 0 ]
          rec10: [ 1 ]
          rec13: [ 2 ]

      rank2:
        # arguments
        reduce:
          action: greater than or equal
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 10
        index: [ 5, 8, 11, 14 ]
        recnum: [ 5, 8, 11, 14 ]
        recidx:
          rec5: [ 0 ]
          rec8: [ 1 ]
          rec11: [ 2 ]
          rec14: [ 3 ]

- obs space:
    name: "Reduce, less than or equal, 2D variables"
    simulated variables: ['brightnessTemperature']
    channels: 1-5
    distribution:
      name: "RoundRobin"
    obsdatain:
      engine:
        type: H5File
        obsfile: "Data/testinput_tier_1/obsspace_reduce_2D.nc4"
  test data:
    gnlocs: 20
    gnlocs outside time window: 0
    nlocs: 20
    nrecs: 20
    obs are sorted: false

    # reduce arguments and expected results
    mpi size2:
      rank0:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 0, 2, 4, 6, 8, 9, 7, 5, 3, 1 ]

        # expected results
        nlocs: 6
        nrecs: 6
        gnlocs: 12
        index: [ 0, 2, 4, 14, 16, 18 ]
        recnum: [ 0, 2, 4, 14, 16, 18 ]
        recidx:
          rec0: [ 0 ]
          rec2: [ 1 ]
          rec4: [ 2 ]
          rec14: [ 3 ]
          rec16: [ 4 ]
          rec18: [ 5 ]

      rank1:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 1, 3, 5, 7, 9, 8, 6, 4, 2, 0 ]

        # expected results
        nlocs: 6
        nrecs: 6
        gnlocs: 12
        index: [ 1, 3, 5, 15, 17, 19 ]
        recnum: [ 1, 3, 5, 15, 17, 19 ]
        recidx:
          rec1: [ 0 ]
          rec3: [ 1 ]
          rec5: [ 2 ]
          rec15: [ 3 ]
          rec17: [ 4 ]
          rec19: [ 5 ]

    mpi size3:
      rank0:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 0, 3, 6, 9, 7, 4, 1 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 12
        index: [ 0, 3, 15, 18 ]
        recnum: [ 0, 3, 15, 18 ]
        recidx:
          rec0: [ 0 ]
          rec3: [ 1 ]
          rec15: [ 2 ]
          rec18: [ 3 ]

      rank1:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 1, 4, 7, 9, 6, 3, 0 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 12
        index: [ 1, 4, 16, 19 ]
        recnum: [ 1, 4, 16, 19 ]
        recidx:
          rec1: [ 0 ]
          rec4: [ 1 ]
          rec16: [ 2 ]
          rec19: [ 3 ]

      rank2:
        # arguments
        reduce:
          action: less than or equal
          threshold: 5
          check vector: [ 2, 5, 8, 8, 5, 2 ]

        # expected results
        nlocs: 4
        nrecs: 4
        gnlocs: 12
        index: [ 2, 5, 14, 17 ]
        recnum: [ 2, 5, 14, 17 ]
        recidx:
          rec2: [ 0 ]
          rec5: [ 1 ]
          rec14: [ 2 ]
          rec17: [ 3 ]

